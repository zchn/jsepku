第1讲作业：

  <![endif]>1.程序阅读（不执行程序，写出运行结果） -- 此题有些难度，选作： 

?       

#include <iostream.h> 

const int u[3] = {1, -3, 2}; 

const int v[2] = {-2, 3}; 

int g(int n){ 

        int i, sum = 0; 

for (i = 1; i <= n; i++) sum += u[i % 3] * i; 

       return sum; 

} 

int main(){ 

       int n, i, sum = 0; 

      cin >> n; 

      for (i = 1; i <= n; i++) sum += v[i % 2] * g(i); 

      cout << sum << endl ; 

      return 0; 

}      

                输入：103              

       输出：             。 

------------------------------------------------------------------------------------------------------ 

第2讲作业：

<![endif]>1.程序阅读（不执行程序，写出运行结果）  

?       

#include <iostream.h> 

void main( ){ 

        int n, m, i, j, tag[20]; 

        long result = 1;   

        cin >> n >> m;          

        if (m>n-m) m=n-m;   

        for (i=0; i<=m; i++) tag[i] =1;   

        for(i=n; i>n-m; i--){ 

                result = result * i;          

                for(j=m; j>1; j - -) 

                        if(tag[j]==0) continue; 

                        else if (result % j == 0){ 

                                tag[j] = 0; 

                                result = result / j;    

                        } 

         }                                                          

         cout << result;                   

} 

　 

 输入： 10   5    

  输出： 

　 

2.在http://ai.pku.edu.cn/JudgeOnline/ 上完成1013和1006题。  


------------------------------------------------------------------------------------------------------ 

第3讲作业：

    在http://ai.pku.edu.cn/JudgeOnline/ 上完成2965,2967,2351,和1565题。  

　

------------------------------------------------------------------------------------------------------ 

第4讲作业：

    在http://ai.pku.edu.cn/JudgeOnline/ 上完成1503和1001题。 

    选做  1131 2706

l   截至时间 3月23日  晚上12点

 

------------------------------------------------------------------------------------------------------ 

第五讲作业：

    在http://ai.pku.edu.cn/JudgeOnline/ 上完成1002题。 

    选做  1706  

l   截至时间 3月23日  晚上12点


------------------------------------------------------------------------------------------------------ 

第六讲作业：

    在http://ai.pku.edu.cn/JudgeOnline/ 上完成1166和1681题。 

l   截至时间 3月30日  晚上12点


------------------------------------------------------------------------------------------------------ 

第七讲作业：

    在http://ai.pku.edu.cn/JudgeOnline/ 上完成2815和2787题。 

l   截至时间 4月6日  晚上12点


------------------------------------------------------------------------------------------------------ 
第八讲作业：

   在http://ai.pku.edu.cn/JudgeOnline/ 上完成1011和1077(选作)题。 

l   截至时间 4月6日  晚上12点

------------------------------------------------------------------------------------------------------ 

第九讲作业：

    在http://ai.pku.edu.cn/JudgeOnline/ 上完成1661和1088题。   

l   截至时间 4月13日  晚上12点

------------------------------------------------------------------------------------------------------ 
第十讲作业：

1.教材第十二章, 完成第233页练习2,此题交作业方式为发邮件给助教;
        
2. 约瑟夫问题： 
有ｎ只猴子，按顺时针方向围成一圈选大王（编号从１到ｎ），从第１号开始报数，一直数到ｍ，数到ｍ的猴子退出圈外，剩下的猴子再重新报数。就这样，直到圈内只剩下一只猴子时，这个猴子就是猴王，编程求输入ｎ，ｍ后，输出最后猴王的序号。

要求用循环链表实现，提交到POJ上2746。

　

3.阅读二叉树建立和遍历的代码tree.cpp；不交。

4：4.完成教材247页练习1，发邮件给助教。 
l   截至时间 4月20日  晚上12点

　

------------------------------------------------------------------------------------------------------ 

第十一讲作业：

1.  POJ1015选作


  截至时间 4月20日  晚上12点


------------------------------------------------------------------------------------------------------ 


第十二讲作业：

1. 阅读教材6、7两章

2   2.   阅读并上机运行课堂给出的三个程序 
　 

      3.    作业6.15 
 


    截至时间 4月27日  晚上12点
                
------------------------------------------------------------------------------------------------------ 
第十三讲作业：

1.阅读教材6、7两章

2.作业7.8，7.9 
 

        截至时间 5月3日  晚上12点
                
 

------------------------------------------------------------------------------------------------------ 
第十四讲作业：

1.阅读教材第8章 

2.请编写一个用于超长整数处理的类，使得下列程序能正确运行。假设每个超长整数最多有100位十进制整数。 
 

void main()

{

    hugeInt a("1234545436342424354354365289899834234235");

    hugeInt b("34535556232345766688999567601199439201990001356");

    hugeInt c("12899");

    hugeInt temp;

    float f;

 

    temp = a+b;

    cin>>temp>>f;

    cout<<"the input float is:"<<f;

    cout<<"the input huge integer is:"<<temp;

    cout<<"adding two huge integers:"<<temp<<endl;

    cout<<"multiplying two huge integers:"<<temp*a<<endl;

    cout<<"substracting two huge integers:"<<a-b<<endl;

    cout<<"multiplying a normal integer and a huge integer:"<<251*a<<endl;

    cout<<"multiplying a huge integer and a normal integer:"<<b*436<<endl;

    cout<<"adding a huge integer and a normal integer:"<<a+13910811<<endl;

    cout<<"adding a normal integer and a huge integer:"<<4578+b<<endl;

    cout<<"increment before a huge integer:"<<++b<<endl;

cout<<"                     versus:"<<b<<endl;

    cout<<"increment after a huge integer:"<< b++ <<endl;

cout<<"                     versus:"<<b<<endl;

    int d = c;

    cout<<"converting a huge interger into a normal integer:"<<d<<endl;

 

}

    截至时间 5月3日  晚上12点
                

 

------------------------------------------------------------------------------------------------------ 

第十五讲作业：


n1. 阅读教材第9章 
n
2.几何形体练习1：练习类、对象 

编写一个程序，计算任给一个几何形体的面积和周长。几何形体可以是矩形、三角型、圆形、扇型、梯形。要求：

1．  由用户通过键盘输入要处理的几何形体，每次输入一个几何形体。输入规则是：

a)         程序输出提示信息，请用户选择要处理的几何形体的类型。如果输入字母“E”，表示要退出程序的运行

b)        根据用户选择的几何形体类型，输出提示信息，请用户输入几何形体的描述数据。例如圆形的中心点坐标和半径。要求在提示信息中说明输入数据的格式。

c)        由程序根据规定的格式读入数据，如果输入数据的格式不对、或错误(例如把一个负数作为圆形的半径输入)，要输出提示信息请求用户输入正确的数据、并再次读入。

在用户输入一个几何形体后，程序输出该几何形体的面积和周长，要求在输出中注明哪个数据是面积、哪个数据是周长。然后回到上一步，继续处理新的几何形体，直到用户选择退出程序运行为止。

 

截至时间 5月18日  晚上12点

　


------------------------------------------------------------------------------------------------------

　

第16讲作业：


1.阅读第10章

　 

2.几何形体练习2 

  在几何形体练习1的基础上，对用户输入的全部几何形体按照面积从小到大进行排序，并输出排序的结果。具体要求见作业描述，重点体会多态的应用，思考如何排序。 

截至时间 5月18日  晚上12点

　

　

------------------------------------------------------------------------------------------------------ 

第17讲作业：

n  
§1.书上: 阅读11、14章，并完成练习 11.12 
2.几何形体练习3：练习文件操作
在几何形体练习1、几何形体练习2的基础上，编写一个几何形体处理程序，假设几何形体的总数不超过100。要求：

1．  输出提示信息，请用户选择输入数据的方式：从键盘输入、从文件输入

2．  如果用户选择从键盘输入，则按照几何形体练习1的要求，读入几何形体。但不需要在每输入一个几何形体后，输出该几何形体的面积和周长。在用户输入完全部数据后，对所输入的几何形体按照面积排序。输出提示信息，请用户选择排序结果的输出方式：输出到屏幕上、输出到文件中

a)         如果用户选择输出到屏幕上，直接按照几何形体练习2的要求输出排序结果。

b)        如果用户选择输出到文件中，则输出提示信息，请用户输入保存结果的文件名。文件的后缀统一为“.geo”。如果文件已经存在，需要将文件中的内容先清空再输出。几何形体在文件中的存储格式要求见规定。

3．  如果用户选择从文件输入，则输出提示信息，请用户输入文件的名称。文件的后缀统一为“.geo”。 几何形体在文件中的存储格式见规定。

a)         如果输入的文件不存在，输出提示信息请用户输入正确的文件，直到成功打开文件为止。

b)        读入文件中的全部几何形体，按照它们的周长从大到小依次在屏幕上输出几何形体。每个几何形体的输出占一行，分别是：在输入文件中的序号、几何形体的类型、面积、周长、描述数据。除输出的序号和类型外，其他的数据都要在输出中给出注释信息。例如某一行的输出如下：

circle  3  area=28.26  perimeter=18.84  central point=(5, 10)  radius=3

表示：

这是一个圆形，是输入文件中的第3个几何形体

它的面积是28.26、周长是18.84、圆心坐标是(5, 10)、半径是3

4．  几何形体在文件中的存储格式规定：几何形体在文件中按照面积从小到大依次存储

a)         每个几何形体在文件中占用一条记录。文件中记录的数量就是所存储几何形体的数量。每条记录中除第一个数据是整数外，其他数据都是float类型。

b)        矩形的存储记录由5个连续存储的数据组成，依次是：整数0、左上角X坐标、左上角Y坐标、右下角X坐标、右下角Y坐标

c)        三角型的存储记录由7个连续存储的数据组成，依次是：整数1、顶点1的X坐标、顶点1的Y坐标、顶点2的X坐标、顶点2的Y坐标、顶点3的X坐标、顶点3的Y坐标

d)        圆形的存储记录由4个连续存储的数据组成，依次是：整数2、圆心的X坐标、圆心的Y坐标、半径长度。

e)         扇型的存储记录由5个连续存储的数据组成，依次是：整数3、圆心的X坐标、圆心的Y坐标、半径长度、扇形的弧度。

f)    梯形的存储记录由9个连续存储的数据组成，依次是：整数4、左上角X坐标、左上角Y坐标、右上角X坐标、右上角Y坐标、左下角X坐标、左下角Y坐标、右下角X坐标、右下角Y坐标。 

　

截至时间 5月25日  晚上12点

　


------------------------------------------------------------------------------------------------------ 
第18讲作业： 


一、 1.阅读教材第19章；完成作业12.4和12.7 

2.POJ 1026 ,1298, 1107, 2159 任选两道要求用string类来做 
三、 
    截至时间 6月1日  晚上12点 

　

文件的RLE（最短行程）压缩和解压缩算法

1．问题描述 
如果某个文件里经常出现连续的重复字节，比如一会儿有连续10个’a’,一会儿又有连续100个'@'，那么这样的文件适合采用RLE压缩算法进行压缩。 

RLE压缩算法的大致思想是：假设被压缩的原文件中有连续10个 5, 那么在压缩文件中只要用两个字节 10、5 就能表示这连续出现的10个5。比如 

某文件内容是（16进制）：00 00 00 00 EF EF EF EF EF 32 45 45 45 

用RLE算法压缩后的文件可以是(16进制)：04 00 05 EF 01 32 03 45 

结果：节省了5个字节 

难点：这种简单的压缩算法不加改进的话，有时反而导致压缩后文件体积变大很多。因为原文件中的单独1个“32”，在压缩文件需要用01 32两个字节来表示。 

2．要求 
实现RLE压缩程序 rlezip和解压缩程序 rleunzip。 

压缩程序rlezip的要求： 

1)压缩单个文件：rlezip some.dat somedat.rzp   

将 some.dat文件压缩成 somedat.rzp 文件 

2)压缩多个文件 

l       rlezip some1.dat some2.dat result.rzp  

将some1.dat 和 some2.dat 两个文件压缩到文件result.zip 里 

l       以此类推，可以将3个、4个……文件压缩到一个文件里 

  

3) 压缩任意一个子目录中的全部内容：rlezip c:\somedir result.zip 

 将 c:\somedir 整个文件夹压缩到result.zip文件里 

  

解压缩程序rleunzip的要求： 

rleunzip result.rzp：将result.rzp里包含的所有文件都解压缩到当前目录下面。如果result.rzp里压缩着一个文件夹，那么也将此文件夹解压缩到当前目录下面。要求解压后的文件夹保持原有的内容和子目录层次关系。

    截至时间 6月8日  晚上12点

　

------------------------------------------------------------------------------------------------------ 



第19讲作业： 
 

1.  
1.阅读 P757 的自测练习及答案; 

2.2.完成 P758 的 20.14. 
    截至时间 6月1日  晚上12点 

　 
l 
------------------------------------------------------------------------------------------------------ 



第20讲作业： 
 

1.  
单词过滤程序：
    in1.txt ,in2.txt 都是纯文本文件，每行一个英文单词，最多可能有二十万行，一个单词长度最多可以有2000个字符。要求编程输出out.txt，out.txt里是in2.txt里有，而in1.txt里没有的单词，每个单词一行。单词不分大小写。 

    截至时间 6月8日  晚上12点 
------------------------------------------------------------------------------------------------------ 



第21讲作业： 
 

1.  
1) 20.15 


2) 写一个自己的 CMyostream_iterator 模板，使之能和 ostream_iterator 模板达到一样的效果，即 

 #include <vector> 

#include <iostream> 

#include <algorithm> 

using namespace std; 

main(){ 

 int a[5] = {1,2,3,4,5}; 

 CMyostream_iterator<int> output(cout,"*"); 

 vector<int> v(a,a+5); 

 copy(v.begin(),v.end(),output); 

} 
  


程序的输出结果是： 

1*2*3*4*5* 

 注意，编写CMyostream_iterator时不能使用 ostream_iterator 

参考 copy 的help 

copy 

template<class InIt, class OutIt> OutIt copy(InIt first, InIt last, OutIt x); 

The template function evaluates *(x + N) = *(first + N)) once for each N in the range [0, last - first), for strictly increasing values of N beginning with the lowest value. It then returns x + N. If x and first designate regions of storage, x must not be in the range [first, last] 

 截至时间 6月15日  晚上12点 
